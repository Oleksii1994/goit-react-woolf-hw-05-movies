{"version":3,"file":"static/js/387.5dd43dc5.chunk.js","mappings":"2UAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAuB,mCAAG,8FACxBF,EAAAA,EAAAA,IAAA,uCAA0CC,IADlB,mFAAH,qDAIvBE,EAAc,mCAAG,WAAMC,GAAN,iFACfJ,EAAAA,EAAAA,IAAA,iBAAoBI,EAApB,oBAAuCH,EAAvC,oBADe,mFAAH,sDAIdI,EAAuB,mCAAG,WAAMC,GAAN,iFACxBN,EAAAA,EAAAA,IAAA,gCACcC,EADd,iCAC0CK,EAD1C,YADwB,mFAAH,sDAMvBC,EAAc,mCAAG,WAAMH,GAAN,iFACfJ,EAAAA,EAAAA,IAAA,iBACDI,EADC,4BAC0BH,EAD1B,oBADe,mFAAH,sDAMdO,EAAiB,mCAAG,WAAMJ,GAAN,iFAClBJ,EAAAA,EAAAA,IAAA,iBACDI,EADC,4BAC0BH,EAD1B,oBADkB,mFAAH,sDAMjBQ,EAAiB,mCAAG,WAAML,GAAN,iFAClBJ,EAAAA,EAAAA,IAAA,iBACDI,EADC,2BACyBH,EADzB,oBADkB,mFAAH,qD,0JC7BjBS,EAAcC,EAAAA,EAAAA,GAAH,0HAQXC,EAAaD,EAAAA,EAAAA,GAAH,8P,6BC8BvB,EAlCgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQX,GAAYY,EAAAA,EAAAA,MAAZZ,QAiBR,OAfAa,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAILV,EAAAA,EAAAA,IAAkBJ,GAJb,gBAGLe,EAHK,EAGbC,KAAQD,QAGVJ,GAAWM,EAAAA,EAAAA,IAAkBF,IANd,gDAQfJ,EAAW,IARI,yDAAH,qDAWhBG,GACD,GAAE,CAACd,IAEIU,EAAQQ,QAGd,SAACZ,EAAD,UACGI,EAAQS,KAAI,YAAsB,IAAnBC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,QAClB,OACE,SAACb,EAAD,WACE,uBAAIa,KADWD,EAIpB,OATH,cAAGE,UAAU,MAAb,2CAYH,C,wGCtCM,IAAMC,EAAmB,SAAAC,GAAG,OACjCA,EAAIL,KAAI,kBAAiC,CACvCC,GADM,EAAGA,GAETK,YAFM,EAAOA,YAGbC,MAHM,EAAoBA,MAApB,GADyB,EAOtBT,EAAoB,SAAAO,GAC/B,OAAOA,EAAIL,KAAI,kBAAsB,CACnCC,GADa,EAAGA,GAEhBC,QAFa,EAAOA,QAAP,GAIhB,EAEYM,EAAiB,SAAAH,GAC5B,OAAOA,EAAIL,KAAI,kBAAiD,CAC9DS,QADa,EAAGA,QAEhBC,UAFa,EAAYA,UAGzBC,KAHa,EAAuBA,KAIpCC,aAJa,EAA6BA,aAA7B,GAMhB,C","sources":["api/api.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","helpers/helpers.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '298a5b49d75fb843dc4c4c38d9d64139';\n\nexport const fetchTrendingMoviesData = async () => {\n  return await axios.get(`/trending/movie/week?api_key=${KEY}`);\n};\n\nexport const fetchMovieInfo = async movieId => {\n  return await axios.get(`/movie/${movieId}?api_key=${KEY}&language=en-US`);\n};\n\nexport const fetchMoviesBySearchWord = async searchWord => {\n  return await axios.get(\n    `/search/movie?api_key=${KEY}&language=en-US&query=${searchWord}&page=1`\n  );\n};\n\nexport const fetchMovieCast = async movieId => {\n  return await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n};\n\nexport const fetchMovieReviews = async movieId => {\n  return await axios.get(\n    `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n  );\n};\n\nexport const fetchTrailerVideo = async movieId => {\n  return await axios.get(\n    `/movie/${movieId}/videos?api_key=${KEY}&language=en-US`\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  padding: 24px;\n`;\n\nexport const ReviewItem = styled.li`\n  border-radius: 4px;\n  background-color: #221c21;\n  padding: 20px;\n  box-shadow: 0px 1px 2px rgb(255 158 0 / 40%), 0px 2px 4px rgb(255 0 245 / 30%),\n    0px 4px 8px rgb(255 221 0 / 40%), 0px 4px 16px rgb(255 247 254 / 10%);\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewItem, ReviewsList } from './Reviews.styled';\nimport { fetchMovieReviews } from 'api/api';\nimport { normalizedReviews } from 'helpers/helpers';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const {\n          data: { results },\n        } = await fetchMovieReviews(movieId);\n\n        setReviews(normalizedReviews(results));\n      } catch (e) {\n        setReviews([]);\n      }\n    };\n    getReviews();\n  }, [movieId]);\n\n  return !reviews.length ? (\n    <p className=\"msg\">Possibly, there are no reviews</p>\n  ) : (\n    <ReviewsList>\n      {reviews.map(({ id, content }) => {\n        return (\n          <ReviewItem key={id}>\n            <p>{content}</p>\n          </ReviewItem>\n        );\n      })}\n    </ReviewsList>\n  );\n};\n\nexport default Reviews;\n","export const normalizedMovies = arr =>\n  arr.map(({ id, poster_path, title }) => ({\n    id,\n    poster_path,\n    title,\n  }));\n\nexport const normalizedReviews = arr => {\n  return arr.map(({ id, content }) => ({\n    id,\n    content,\n  }));\n};\n\nexport const normalizedCast = arr => {\n  return arr.map(({ cast_id, character, name, profile_path }) => ({\n    cast_id,\n    character,\n    name,\n    profile_path,\n  }));\n};\n"],"names":["axios","KEY","fetchTrendingMoviesData","fetchMovieInfo","movieId","fetchMoviesBySearchWord","searchWord","fetchMovieCast","fetchMovieReviews","fetchTrailerVideo","ReviewsList","styled","ReviewItem","useState","reviews","setReviews","useParams","useEffect","getReviews","results","data","normalizedReviews","length","map","id","content","className","normalizedMovies","arr","poster_path","title","normalizedCast","cast_id","character","name","profile_path"],"sourceRoot":""}