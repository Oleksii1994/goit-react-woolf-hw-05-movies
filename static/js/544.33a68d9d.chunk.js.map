{"version":3,"file":"static/js/544.33a68d9d.chunk.js","mappings":"2UAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAuB,mCAAG,8FACxBF,EAAAA,EAAAA,IAAA,uCAA0CC,IADlB,mFAAH,qDAIvBE,EAAc,mCAAG,WAAMC,GAAN,iFACfJ,EAAAA,EAAAA,IAAA,iBAAoBI,EAApB,oBAAuCH,EAAvC,oBADe,mFAAH,sDAIdI,EAAuB,mCAAG,WAAMC,GAAN,iFACxBN,EAAAA,EAAAA,IAAA,gCACcC,EADd,iCAC0CK,EAD1C,YADwB,mFAAH,sDAMvBC,EAAc,mCAAG,WAAMH,GAAN,iFACfJ,EAAAA,EAAAA,IAAA,iBACDI,EADC,4BAC0BH,EAD1B,oBADe,mFAAH,sDAMdO,EAAiB,mCAAG,WAAMJ,GAAN,iFAClBJ,EAAAA,EAAAA,IAAA,iBACDI,EADC,4BAC0BH,EAD1B,oBADkB,mFAAH,sDAMjBQ,EAAiB,mCAAG,WAAML,GAAN,iFAClBJ,EAAAA,EAAAA,IAAA,iBACDI,EADC,2BACyBH,EADzB,oBADkB,mFAAH,qD,sFC7BjBS,EAAeC,EAAAA,EAAAA,GAAH,wfAoBZC,EAAWD,EAAAA,EAAAA,IAAH,2DAKRE,EAAkBF,EAAAA,EAAAA,GAAH,gIAUfG,EAAkBH,EAAAA,EAAAA,IAAH,gL,sCC5BfI,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACL,EAAD,UACGG,EAAOG,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAC9B,OACE,SAACZ,EAAD,WACE,UAAC,KAAD,CAAMa,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,WACE,SAACL,EAAD,WACE,SAAC,IAAD,CACEc,IACEL,EAAW,0CAC4BA,GAD5B,2PAIbM,IAAKL,EACLM,MAAM,WAGV,SAACd,EAAD,WACE,wBAAKQ,UAdQF,EAmBtB,KAGN,C,wGCtCM,IAAMS,EAAmB,SAAAC,GAAG,OACjCA,EAAIX,KAAI,kBAAiC,CACvCC,GADM,EAAGA,GAETC,YAFM,EAAOA,YAGbC,MAHM,EAAoBA,MAApB,GADyB,EAOtBS,EAAoB,SAAAD,GAC/B,OAAOA,EAAIX,KAAI,kBAAsB,CACnCC,GADa,EAAGA,GAEhBY,QAFa,EAAOA,QAAP,GAIhB,EAEYC,EAAiB,SAAAH,GAC5B,OAAOA,EAAIX,KAAI,kBAAiD,CAC9De,QADa,EAAGA,QAEhBC,UAFa,EAAYA,UAGzBC,KAHa,EAAuBA,KAIpCC,aAJa,EAA6BA,aAA7B,GAMhB,C,oICOD,UAtBa,WACX,OAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IACE,IAAMC,EAAiB,mCAAG,uGAGdxC,EAAAA,EAAAA,MAHc,gBAEdyC,EAFc,EAEtBC,KAAQD,QAGVH,GAAiBX,EAAAA,EAAAA,IAAiBc,IALV,2CAAH,qDAOvBD,GAID,CAHC,MAAOG,GACPC,QAAQC,IAAIF,EAAEG,SACdC,EAAAA,OAAAA,MAAa,qDACd,CACF,GAAE,KAEI,SAAC,IAAD,CAAYjC,OAAQuB,GAC5B,C,wGCxBYW,EAAkBvC,EAAAA,EAAAA,OAAH,mcAmBfwC,EAAYxC,EAAAA,EAAAA,IAAH,6C","sources":["api/api.js","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","helpers/helpers.js","pages/Home/Home.jsx","pages/Movies/Movies.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '298a5b49d75fb843dc4c4c38d9d64139';\n\nexport const fetchTrendingMoviesData = async () => {\n  return await axios.get(`/trending/movie/week?api_key=${KEY}`);\n};\n\nexport const fetchMovieInfo = async movieId => {\n  return await axios.get(`/movie/${movieId}?api_key=${KEY}&language=en-US`);\n};\n\nexport const fetchMoviesBySearchWord = async searchWord => {\n  return await axios.get(\n    `/search/movie?api_key=${KEY}&language=en-US&query=${searchWord}&page=1`\n  );\n};\n\nexport const fetchMovieCast = async movieId => {\n  return await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n};\n\nexport const fetchMovieReviews = async movieId => {\n  return await axios.get(\n    `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n  );\n};\n\nexport const fetchTrailerVideo = async movieId => {\n  return await axios.get(\n    `/movie/${movieId}/videos?api_key=${KEY}&language=en-US`\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const TrendingItem = styled.li`\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: #af93aa12;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 352px;\n  transition-duration: 250ms;\n  transition-property: scale;\n  transition-timing-function: ease-in-out;\n\n  &:hover {\n    scale: 1.02;\n    box-shadow: 0px 1px 2px rgb(255 0 249 / 31%),\n      0px 2px 4px rgb(255 0 245 / 50%), 0px 4px 8px rgb(255 235 0 / 31%),\n      0px 8px 16px rgb(255 247 254 / 35%);\n  }\n`;\n\nexport const ImgThumb = styled.div`\n  width: 352px;\n  height: 528px;\n`;\n\nexport const TrendingGallery = styled.ul`\n  padding: 32px 0;\n\n  display: flex;\n\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const TitleMovieThumb = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 60px;\n  padding: 16px 0;\n  text-align: center;\n  font-size: 12px;\n`;\n","import {\n  TrendingItem,\n  TrendingGallery,\n  ImgThumb,\n  TitleMovieThumb,\n} from './MoviesList.styled';\nimport { Link, useLocation } from 'react-router-dom';\nimport { PosterImg } from 'pages/Movies/Movies.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <TrendingGallery>\n      {movies.map(({ id, poster_path, title }) => {\n        return (\n          <TrendingItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <ImgThumb>\n                <PosterImg\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                      : `https://media.istockphoto.com/id/147273331/uk/%D1%84%D0%BE%D1%82%D0%BE/%D1%81%D0%B8%D0%BD%D1%94-%D0%B2%D1%96%D0%B4%D1%80%D0%BE-%D0%BF%D0%BE%D0%BF%D0%BA%D0%BE%D1%80%D0%BD%D1%83.jpg?s=2048x2048&w=is&k=20&c=EVEpgBCnZmkrieihX5eDgsssBgcGyU71woNkj5N4FiM=`\n                  }\n                  alt={title}\n                  width=\"352\"\n                />\n              </ImgThumb>\n              <TitleMovieThumb>\n                <h2>{title}</h2>\n              </TitleMovieThumb>\n            </Link>\n          </TrendingItem>\n        );\n      })}\n    </TrendingGallery>\n  );\n};\n","export const normalizedMovies = arr =>\n  arr.map(({ id, poster_path, title }) => ({\n    id,\n    poster_path,\n    title,\n  }));\n\nexport const normalizedReviews = arr => {\n  return arr.map(({ id, content }) => ({\n    id,\n    content,\n  }));\n};\n\nexport const normalizedCast = arr => {\n  return arr.map(({ cast_id, character, name, profile_path }) => ({\n    cast_id,\n    character,\n    name,\n    profile_path,\n  }));\n};\n","import { useEffect, useState } from 'react';\nimport { Notify } from 'notiflix';\nimport { fetchTrendingMoviesData } from 'api/api';\nimport { normalizedMovies } from 'helpers/helpers';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [popularMovies, setPopularMovies] = useState([]);\n\n  useEffect(() => {\n    try {\n      const getTrendingMovies = async () => {\n        const {\n          data: { results },\n        } = await fetchTrendingMoviesData();\n\n        setPopularMovies(normalizedMovies(results));\n      };\n      getTrendingMovies();\n    } catch (e) {\n      console.log(e.message);\n      Notify.error('Oops, something went wrong, try to reload the page');\n    }\n  }, []);\n\n  return <MoviesList movies={popularMovies} />;\n};\n\nexport default Home;\n","import styled from '@emotion/styled';\n\nexport const SearchBarHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #392b3754;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const PosterImg = styled.img`\n  object-fit: cover;\n`;\n"],"names":["axios","KEY","fetchTrendingMoviesData","fetchMovieInfo","movieId","fetchMoviesBySearchWord","searchWord","fetchMovieCast","fetchMovieReviews","fetchTrailerVideo","TrendingItem","styled","ImgThumb","TrendingGallery","TitleMovieThumb","MoviesList","movies","location","useLocation","map","id","poster_path","title","to","state","from","src","alt","width","normalizedMovies","arr","normalizedReviews","content","normalizedCast","cast_id","character","name","profile_path","useState","popularMovies","setPopularMovies","useEffect","getTrendingMovies","results","data","e","console","log","message","Notify","SearchBarHeader","PosterImg"],"sourceRoot":""}