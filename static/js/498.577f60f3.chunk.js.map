{"version":3,"file":"static/js/498.577f60f3.chunk.js","mappings":"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","sources":["api/api.js","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchFormMovies.styled.jsx","components/SearchForm/SearchFormMovies.jsx","pages/Movies/Movies.jsx","pages/Movies/Movies.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const KEY = '298a5b49d75fb843dc4c4c38d9d64139';\n\nexport const fetchTrendingMoviesData = async () => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/week?api_key=${KEY}`\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const fetchMovieInfo = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const fetchMoviesBySearchWord = async searchWord => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${searchWord}&page=1`\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const fetchTrailerVideo = async movieId => {\n  try {\n    return await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${KEY}&language=en-US`\n    );\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const TrendingItem = styled.li`\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: #af93aa12;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 352px;\n  transition-duration: 250ms;\n  transition-property: scale;\n  transition-timing-function: ease-in-out;\n\n  &:hover {\n    scale: 1.02;\n    box-shadow: 0px 1px 2px rgb(255 0 249 / 31%),\n      0px 2px 4px rgb(255 0 245 / 50%), 0px 4px 8px rgb(255 235 0 / 31%),\n      0px 8px 16px rgb(255 247 254 / 35%);\n  }\n`;\n\nexport const ImgThumb = styled.div`\n  width: 352px;\n  height: 528px;\n`;\n\nexport const TrendingGallery = styled.ul`\n  padding: 32px 0;\n\n  display: flex;\n\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const TitleMovieThumb = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  height: 60px;\n  padding: 16px 0;\n  text-align: center;\n  font-size: 12px;\n`;\n","import {\n  TrendingItem,\n  TrendingGallery,\n  ImgThumb,\n  TitleMovieThumb,\n} from './MoviesList.styled';\nimport { Link } from 'react-router-dom';\nimport { PosterImg } from 'pages/Movies/Movies.styled';\n\nexport const MoviesList = ({ movies, location }) => {\n  return (\n    <TrendingGallery>\n      {movies.map(({ id, poster_path, title }) => {\n        return (\n          <TrendingItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <ImgThumb>\n                <PosterImg\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                      : `https://media.istockphoto.com/id/147273331/uk/%D1%84%D0%BE%D1%82%D0%BE/%D1%81%D0%B8%D0%BD%D1%94-%D0%B2%D1%96%D0%B4%D1%80%D0%BE-%D0%BF%D0%BE%D0%BF%D0%BA%D0%BE%D1%80%D0%BD%D1%83.jpg?s=2048x2048&w=is&k=20&c=EVEpgBCnZmkrieihX5eDgsssBgcGyU71woNkj5N4FiM=`\n                  }\n                  alt={title}\n                  width=\"352\"\n                />\n              </ImgThumb>\n              <TitleMovieThumb>\n                <h2>{title}</h2>\n              </TitleMovieThumb>\n            </Link>\n          </TrendingItem>\n        );\n      })}\n    </TrendingGallery>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #140e1294;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-color: #5d425b;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormBtnLabel = styled.span`\n  position: absolute;\n  width: 16px;\n  height: 16px;\n\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 24px;\n  padding-right: 4px;\n  background-color: #140e1200;\n  color: #ffffff;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n    color: #ffffff;\n  }\n`;\n","import { useState } from 'react';\nimport { FaSistrix } from 'react-icons/fa';\nimport { Notify } from 'notiflix';\nimport {\n  SearchForm,\n  SearchInput,\n  SearchFormBtn,\n  SearchFormBtnLabel,\n} from './SearchFormMovies.styled';\n\nexport const SearchFormMovies = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const onChange = ({ target }) => {\n    setSearchQuery(target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let { value } = event.target.elements.search;\n\n    setSearchQuery(value.toLowerCase().trim());\n\n    if (searchQuery.trim() === '') {\n      Notify.warning('Enter title of movie to search');\n      value = '';\n      return;\n    }\n    onSubmit(value);\n    setSearchQuery('');\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <SearchFormBtn type=\"submit\" className=\"button\">\n        <FaSistrix size=\"24px\" fill=\"#ffffff\" />\n        <SearchFormBtnLabel className=\"button-label\">Search</SearchFormBtnLabel>\n      </SearchFormBtn>\n\n      <SearchInput\n        type=\"text\"\n        autoComplete=\"off\"\n        name=\"search\"\n        autoFocus\n        placeholder=\"Search images and photos\"\n        value={searchQuery}\n        onChange={onChange}\n      />\n    </SearchForm>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nimport { fetchMoviesBySearchWord } from 'api/api';\nimport { SearchBarHeader } from './Movies.styled';\nimport { SearchFormMovies } from 'components/SearchForm/SearchFormMovies';\n\nconst Movies = () => {\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQueryFromParams = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (searchQueryFromParams === null) {\n      return;\n    }\n\n    try {\n      const getFilteredMovies = async () => {\n        const {\n          data: { results },\n        } = await fetchMoviesBySearchWord(searchQueryFromParams);\n\n        if (!results.length) {\n          Notiflix.Notify.warning(\n            'Oops there are no movies by this search, try another title'\n          );\n        }\n        const filteredData = results.map(\n          ({ id, poster_path, original_title }) => ({\n            id,\n            poster_path,\n            original_title,\n          })\n        );\n\n        setFilteredMovies(filteredData);\n      };\n\n      getFilteredMovies();\n    } catch (e) {\n      console.log(e.message);\n    }\n  }, [searchQueryFromParams, searchParams]);\n\n  const onSubmit = value => {\n    setSearchParams({ query: value.toLowerCase().trim() });\n  };\n\n  return (\n    <div>\n      <SearchBarHeader>\n        <SearchFormMovies onSubmit={onSubmit} />\n      </SearchBarHeader>\n\n      {filteredMovies.length > 0 && (\n        <MoviesList movies={filteredMovies} location={location} />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import styled from '@emotion/styled';\n\nexport const SearchBarHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #392b3754;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const PosterImg = styled.img`\n  object-fit: cover;\n`;\n"],"names":["KEY","fetchTrendingMoviesData","axios","console","log","fetchMovieInfo","movieId","fetchMoviesBySearchWord","searchWord","fetchMovieCast","fetchMovieReviews","fetchTrailerVideo","TrendingItem","styled","ImgThumb","TrendingGallery","TitleMovieThumb","MoviesList","movies","location","map","id","poster_path","title","to","state","from","src","alt","width","SearchForm","SearchFormBtn","SearchFormBtnLabel","SearchInput","SearchFormMovies","onSubmit","useState","searchQuery","setSearchQuery","event","preventDefault","value","target","elements","search","toLowerCase","trim","Notify","type","className","size","fill","autoComplete","name","autoFocus","placeholder","onChange","filteredMovies","setFilteredMovies","useSearchParams","searchParams","setSearchParams","searchQueryFromParams","get","useLocation","useEffect","getFilteredMovies","results","data","length","Notiflix","filteredData","original_title","e","message","query","SearchBarHeader","PosterImg"],"sourceRoot":""}